name: Test Django

on:
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mariadb:
        image: mariadb:latest
        ports:
          - '3306:3306'
        env:
          MARIADB_USER: poetfolio
          MARIADB_PASSWORD: devdevdev
          MARIADB_DATABASE: poetfolio_dev
          MARIADB_ROOT_PASSWORD: devdevdev
        options: --health-cmd="mysqladmin ping -h127.0.0.1 --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      POETFOLIO_DB_NAME: poetfolio_dev
      POETFOLIO_DB_USER: root
      POETFOLIO_DB_PASSWORD: devdevdev
      POETFOLIO_STATIC: /home/runner/static
      POETFOLIO_DB_HOST: 127.0.0.1

    steps:
    - uses: actions/checkout@v4

    # Install nix and build the flake
    - uses: DeterminateSystems/nix-installer-action@main
    - name: Install Flake and check
      run: |
        nix build
        nix flake check

    # Verify MariaDB is ready (using service health check)
    - name: Verify MariaDB connection
      run: |
        while ! mysqladmin ping -h"127.0.0.1" -P3306 --silent; do
          sleep 1
        done

    # Set up the environment
    - name: Set Up Environment
      run: |
        mkdir /home/runner/static
        ./result/bin/python ./ekiree_dashboard/manage.py collectstatic --noinput

    # Test Migrations (this can be parallelized later if desired)
    - name: Test Migrations
      run: ./result/bin/python ekiree_dashboard/manage.py migrate --skip-checks

    # Run all tests in parallel (or sequentially if dependencies exist)
    - name: Run Tests
      run: |
        ./result/bin/python ekiree_dashboard/manage.py test poetfolio &
        ./result/bin/python ekiree_dashboard/manage.py test reports &
        ./result/bin/python ekiree_dashboard/manage.py test vita &
        ./result/bin/python ekiree_dashboard/manage.py test siteconfig &
        ./result/bin/python ekiree_dashboard/manage.py test ed

    # Wait for all background tests to finish
    - name: Wait for Tests
      run: wait

